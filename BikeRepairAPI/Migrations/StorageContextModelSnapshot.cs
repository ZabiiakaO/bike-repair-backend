// <auto-generated />
using BikeRepairAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeRepairAPI.Migrations
{
    [DbContext(typeof(StorageContext))]
    partial class StorageContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BikeRepairAPI.BikeRepairRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
                    b.Property<string>("LastName")
                       .IsRequired()
                       .HasColumnType("nvarchar(max)");
                    b.Property<string>("Street")
                       .IsRequired()
                       .HasColumnType("nvarchar(max)");
                    b.Property<string>("No")
                       .IsRequired()
                       .HasColumnType("nvarchar(max)");
                    b.Property<string>("Postcode")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("Location")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("Phone")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("BikeType")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("BikeBrand")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("ServicePackage")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("ServiceUnits")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");
                    b.Property<string>("CostCeiling")
                     .IsRequired()
                     .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BikeRepairRequests");
                });

            modelBuilder.Entity("BikeRepairAPI.BikeTypeRequest", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id")); 

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("BikeTypeRequests");
            });

            modelBuilder.Entity("BikeRepairAPI.BrandRequest", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("BrandRequests");
            });

            modelBuilder.Entity("BikeRepairAPI.ServicePackageRequest", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");
                b.Property<string>("Description")
                   .IsRequired()
                   .HasColumnType("nvarchar(max)");
                b.Property<string>("Price")
                   .IsRequired()
                   .HasColumnType("nvarchar(max)");
                b.Property<string>("Currency")
                   .IsRequired()
                   .HasColumnType("nvarchar(max)");
                b.Property<string>("isElectoBikex")
                   .IsRequired()
                   .HasColumnType("bit");
                b.HasKey("Id");

                b.ToTable("ServicePackageRequests");
            });
            modelBuilder.Entity("BikeRepairAPI.ServiceUnitRequest", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");
               
                b.Property<string>("Value")
                   .IsRequired()
                   .HasColumnType("bit");
                b.HasKey("Id");
                b.Property<string>("isElectoBikex")
                   .IsRequired()
                   .HasColumnType("bit");
                b.HasKey("Id");
                b.ToTable("ServiceUnitRequests");
            });

#pragma warning restore 612, 618
        }
    }
}
